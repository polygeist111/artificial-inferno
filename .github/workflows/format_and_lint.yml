---
# template source: https://github.com/bretfisher/super-linter-workflow/blob/main/templates/call-super-linter.yaml
name: Lint Code Base
run-name: ${{ github.event.inputs.custom_run_name || github.workflow }}

on:
  # run anytime a PR is merged to main or a direct push to main
  push:
    branches: [main]

  # run on any push to a PR branch
  pull_request:

  # run on demand
  workflow_dispatch:
    inputs:
      custom-run-name:
        description: "Custom name for this Actions run"
        required: false
        type: string

# cancel any previously-started, yet still active runs of this workflow on the same branch
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

permissions: read-all

# adapted from https://mskelton.medium.com/auto-formatting-code-using-prettier-and-github-actions-ed458f58b7df
jobs:
  call-super-linter:
    #  needs: format
    name: Call Super-Linter

    permissions:
      contents: read # clone the repo to lint
      statuses: write # read/write to repo custom statuses

    ### use Reusable Workflows to call my workflow remotely
    ### https://docs.github.com/en/actions/learn-github-actions/reusing-workflows
    ### you can also call workflows from inside the same repo via file path

    # FIXME: customize uri to point to your own reusable linter repository
    uses: polygeist111/super-linter-workflow/.github/workflows/reusable-super-linter.yaml@main
    # TODO: update url to point to gb reusable linter, not thalia's

    ### Optional settings examples

    with:
      ### For a DevOps-focused repository. Prevents some code-language linters from running
      ### defaults to false
      # devops-only: false

      ### A regex to exclude files from linting
      ### defaults to empty
      filter-regex-exclude: src/tarpit/raw_downloads/*
